{"version":3,"sources":["getKeyboardShortcutsForNote.js","note.js","isAccidentalNote.js","AudioContext.js","AudioPlayer.js","InstrumentAudio.js","Instrument.js","getNotesBetween.js","Piano.js","App.js","serviceWorker.js","index.js"],"names":["getKeyboardShortcutsForNote","keyboardMap","note","Object","keys","filter","shortcut","TONES","Octave_numbers","reduce","notes","octavenumber","notesInOctave","map","tone","NOTES","includes","window","AudioContext","webkitAudioContext","NullSoundFontPlayerNoteAudio","stop","NullSoundFontPlayer","play","AudioPlayer","audioContext","soundPlayer","setInstrument","instrumentName","SoundFontPlayer","instrument","then","soundFontPlayer","catch","e","playNote","InstrumentAudio","useState","instrumentPlayer","setInstrumentPlayer","useEffect","playnotes","length","isRegularKey","event","ctrlKey","metaKey","shiftKey","Instrument","startNote","endNote","renderPianoKey","startingNode","indexOf","endingNode","lastIndexOf","slice","getNotesBetween","notesPlaying","state","setState","addEventListener","handleKeyDown","handleKeyUp","getNoteFromKeyBoardKey","keyboardKey","toUpperCase","repeat","key","notePlaying","isAccidentalNote","isNotePlaying","startPlayingNote","onPlayNoteStart","stopPlayingNote","onPlayNoteEnd","keyboardShortcut","Piano","accidentalKey","isPlaying","text","eventHandlers","className","naturalKey","startPlayingNode","stopPlayingNode","KeyComponent","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseOut","join","Q","2","W","3","E","R","5","T","6","Y","7","U","I","9","O","0","P","Z","S","X","D","C","F","V","B","H","N","J","M","L","A","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.b6679ee5.chunk.js","sourcesContent":["export const  getKeyboardShortcutsForNote = (keyboardMap, note) => {\n    const keyboardShortcuts = Object.keys(keyboardMap);\n    return keyboardShortcuts.filter(shortcut => keyboardMap[shortcut] === note);\n  }\n","const TONES = ['C','C#','D','D#','E','F','F#','G','G#','A','A#','B'];\nconst Octave_numbers = [1,2,3,4,5,6,7];\n\nexport default Octave_numbers.reduce((notes,octavenumber) => {\n\tconst notesInOctave = TONES.map(tone => `${tone}${octavenumber}` );\n\treturn [...notes, ...notesInOctave];\n},[]);\n\n","import NOTES from './note'\nexport default (note) => {\n    return NOTES.includes(note) && note.includes('#')\n}\n","export default window.AudioContext || window.webkitAudioContext;\n","import SoundFontPlayer from 'soundfont-player';\nimport AudioContext from './AudioContext';\n\nconst NullSoundFontPlayerNoteAudio = {\n\tstop() {}\n};\nconst NullSoundFontPlayer = {\n\tplay()\n\t{\n\t\treturn NullSoundFontPlayerNoteAudio;\n\t}\n};\nconst AudioPlayer = () => {\n\n\tconst audioContext = AudioContext && new AudioContext();\n\tlet soundPlayer = NullSoundFontPlayer;\n\n\tconst Player = {\n\t\tsetInstrument(instrumentName)  {\n\t\t\tSoundFontPlayer.instrument(audioContext,instrumentName)\n\t\t\t.then(soundFontPlayer => {\n\t\t\t\tsoundPlayer = soundFontPlayer;}\n\t\t\t)\n\t\t\t.catch(e => {\n\t\t\t\tsoundPlayer = NullSoundFontPlayer;\n\t\t\t});\n\t\t},\n\t\t\tplayNote(note) {\n\t\t\t\treturn soundPlayer.play(note)\n\t\t\t}\n\t};\n\n\treturn Player;\n};\n\nexport default AudioPlayer;\n\n\t\n\n","import React, { useEffect, useState } from 'react';\nimport AudioPlayer from './AudioPlayer';\n\nconst InstrumentAudio = ({instrumentName, notes}) => {\n\tconst[instrumentPlayer,setInstrumentPlayer] = useState(null);\n\tuseEffect(() => {\n\t\tsetInstrumentPlayer(AudioPlayer);\n\t},[]);\n\n\tuseEffect(() => {\n\t\tif(instrumentPlayer) {\n\t\t\tsetInstrument();\n\t\t\tplaynotes();\n\t\t}\n\t},[instrumentPlayer]);\n\t\n\n\tuseEffect(() => {\n\t\tif(notes && notes.length > 0) {\n\t\t\tplaynotes();\n\t\t}\n\t},[notes]);\n\t\n\tconst setInstrument = () => {\n\t\tinstrumentPlayer.setInstrument(instrumentName);\n\t}\n\n\tconst playnotes = () => {\n\t\tif(instrumentPlayer) {\n\t\t\tinstrumentPlayer.playNote(notes[0]);\n\t\t}\n\t};\n\treturn null;\n};\n\nexport default InstrumentAudio;\n\t \n","import React, { Fragment ,useState,useEffect,Component } from 'react';\nimport {getKeyboardShortcutsForNote} from \"./getKeyboardShortcutsForNote\";\nimport isAccidentalNote from './isAccidentalNote';\nimport getNotesBetween from './getNotesBetween';\nimport InstrumentAudio from './InstrumentAudio';\n\nconst isRegularKey = event => {\n\treturn !event.ctrlKey && !event.metaKey && !event.shiftKey;\n\n};\n\nconst Instrument =({\n\tinstrumentName,\n\tstartNote,\n\tendNote,\n\trenderPianoKey,\n\tkeyboardMap\n}) => {\n\tconst notes = getNotesBetween(startNote, endNote);\n\n\tconst[state, setState] = useState({ \n\t\tnotesPlaying: []\n\t});\n\n\tuseEffect(()=>{\n\t\twindow.addEventListener(\"keydown\",handleKeyDown);\n\t\twindow.addEventListener(\"keyup\" ,handleKeyUp);\n\t},[]);\n\n\tconst getNoteFromKeyBoardKey = keyboardKey => {\n\t\treturn keyboardMap[keyboardKey.toUpperCase()];\n\t};\n\n\tconst handleKeyDown = e => {\n\t\tif(isRegularKey(e) && !e.repeat) {\n\t\t\tconst note = getNoteFromKeyBoardKey(e.key);\n\t\t\tif(note) {\n\t\t\t\tsetState({\n\t\t\t\t\t...state, notesPlaying: [...state.notesPlaying, note]});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleKeyUp = e => {\n\t\tif(isRegularKey(e) && !e.repeat) {\n\t\t\tconst note=getNoteFromKeyBoardKey(e.key);\n\t\t\tif(note) {\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tnotesPlaying: state.notesPlaying.filter(\n\t\t\t\t\t\tnotePlaying => notePlaying !== note\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\n\n\tconst onPlayNoteEnd = note => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tnotesPlaying: state.notesPlaying.filter(\n\t\t\t\tnotePlaying => notePlaying !== note)\n\t\t});\n\t};\n\n\n\tconst onPlayNoteStart = note => {\n\t\tsetState({\n\t\t\t...state, notesPlaying: [...state.notesPlaying, note]});\n\t};\n\t//rendering piano keys\n\t\n\n\treturn (\n\t\t<Fragment>\n\t\t{notes.map(note => {\n\t\t\treturn (\n\t\t\t\t<Fragment key={note}>\n\t\t\t\t{renderPianoKey({\n\t\t\t\t\tnote,\n\t\t\t\t\tisAccidentalNote: isAccidentalNote(note),\n\t\t\t\t\tisNotePlaying: state.notesPlaying.includes(note),\n\t\t\t\t\tstartPlayingNote: () => onPlayNoteStart(note),\n\t\t\t\t\tstopPlayingNote: () => onPlayNoteEnd(note),\n\t\t\t\t\tkeyboardShortcut: getKeyboardShortcutsForNote(keyboardMap, note)\n\t\t\t\t})}\n\t\t\t\t</Fragment>\n\t\t\t);\n\n\t\t})}\n\n\t\t<InstrumentAudio\n\t\tinstrumentName={instrumentName}\n\t\tnotes={state.notesPlaying}\n\t\t />\n\t\t\n\t\t</Fragment>\n\t);\n};\n\nexport default Instrument;\n\n\n\n\n\n\n\n","import NOTES from './note';\n\nexport default function getNotesBetween(startNote, endNote) {\n\tconst startingNode = NOTES.indexOf(startNote);\n\tconst endingNode = NOTES.lastIndexOf(endNote);\n\treturn NOTES.slice(startingNode, endingNode+1);\n}\n","import React, {Fragment} from 'react';\nimport Instrument from './Instrument';\n\nconst Piano = () => {\n\n\tconst accidentalKey = ({ isPlaying, text, eventHandlers }) => {\n\treturn(\n\t\t<div className='piano-accidental-key-wrapper'>\n\t\t<button className={ `piano-accidental-key ${ isPlaying ? 'piano-accidental-key-playing' : '' }` \n\t\t}\n\t\t{...eventHandlers}>\n\n\t\t<div className='piano-text'>{text}</div>\n\n\t\t</button>\n\n\t\t</div>\n\t);\n};\n\n\nconst naturalKey = ({ isPlaying, text, eventHandlers }) => {\n\treturn(\n\t\t<button className={ `piano-natural-key ${\n\t\t\tisPlaying ? 'piano-natural-key-playing' : ''}\n\t\t`}\n\t\t{...eventHandlers}>\n\n\t\t<div className='piano-text'>{text}</div>\n\t\t</button>\n\t);\n};\n\nconst renderPianoKey=({\n\tisAccidentalNote,\n\tisNotePlaying,\n\tstartPlayingNode,\n\tstopPlayingNode,\n\tkeyboardShortcut\n}) => {\n\tconst KeyComponent = isAccidentalNote ? accidentalKey : naturalKey;\n\n\tconst eventHandlers = {\n\t\tonMouseDown: startPlayingNode,\n\t\tonMouseUp: stopPlayingNode,\n\t\tonTouchStart: startPlayingNode,\n\t\tonTouchEnd: stopPlayingNode,\n\t\tonMouseOut: stopPlayingNode\n\t};\n\n\treturn(\n\t\t<KeyComponent notePlaying ={isNotePlaying}\n\t\ttext={keyboardShortcut.join(\"/\")}\n\t\teventHandlers={eventHandlers}\n\t\t/>\n\t);\n};\n\n\nreturn(\n\t<div className='piano-container'>\n        <Instrument instrumentName={\"acoustic_grand_piano\"}\n\tstartNote={\"C3\"}\n\tendNote={\"B5\"}\n\trenderPianoKey={renderPianoKey}\n\tkeyboardMap={{\n\t\tQ: \"C3\",\n\t\t2: \"C#3\",\n\t\tW: \"D3\",\n\t\t3: \"D#3\",\n\t\tE: \"E3\",\n\t\tR: \"F3\",\n\t\t5: \"F#3\",\n\t\tT: \"G3\",\n\t\t6: \"G#3\",\n\t\tY: \"A3\",\n\t\t7: \"A#3\",\n\t\tU: \"B3\",\n\t\tI: \"C4\",\n\t\t9: \"C#4\",\n\t\tO: \"D4\",\n\t\t0: \"D#4\",\n\t\tP: \"E4\",\n\t\tZ: \"F4\",\n\t\tS: \"F#4\",\n\t\tX: \"G4\",\n\t\tD: \"G#4\",\n\t\tC: \"A4\",\n\t\tF: \"A#4\",\n\t\tV: \"B4\",\n\t\tB: \"C5\",\n\t\tH: \"C#5\",\n\t\tN: \"D5\",\n\t\tJ: \"D#5\",\n\t\tM: \"E5\",\n\t\t\",\": \"F5\",\n\t\tL: \"F#5\",\n\t\t\".\": \"G5\",\n\t\t\";\": \"G#5\",\n\t\t\"/\": \"A5\",\n\t\t\"'\": \"A#5\",\n\t\tA: \"B5\"\n\t}}\n\t/>\n\t</div>\n);\n}\nexport default Piano;\n\n\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Piano from './Piano';\n\n\nfunction App() {\n\treturn(\n\t<div className=\"app-container\">\n\t<Piano />\n\t</div>\n);\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}